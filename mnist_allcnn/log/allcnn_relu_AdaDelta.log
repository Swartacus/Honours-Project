I1017 07:42:05.519392  2835 caffe.cpp:217] Using GPUs 0
I1017 07:42:05.662392  2835 caffe.cpp:222] GPU 0: GeForce GTX 960
I1017 07:42:06.703207  2835 solver.cpp:48] Initializing solver from parameters: 
train_net: "/home/adam/Honours/Honours-Project/mnist_allcnn/relu/allcnn_relu_train.prototxt"
test_net: "/home/adam/Honours/Honours-Project/mnist_allcnn/relu/allcnn_relu_test.prototxt"
test_iter: 100
test_interval: 25
base_lr: 0.0001
display: 50
max_iter: 25000
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 5000
snapshot: 5000
snapshot_prefix: "cifar-10_relu_AdaDelta"
solver_mode: GPU
device_id: 0
train_state {
  level: 0
  stage: ""
}
type: "AdaDelta"
I1017 07:42:06.703523  2835 solver.cpp:81] Creating training net from train_net file: /home/adam/Honours/Honours-Project/mnist_allcnn/relu/allcnn_relu_train.prototxt
I1017 07:42:06.719343  2835 net.cpp:58] Initializing net from parameters: 
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "data"
  type: "Data"
  top: "data"
  top: "label"
  data_param {
    source: "../../../data/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  convolution_param {
    num_output: 96
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "conv1"
  top: "conv2"
  convolution_param {
    num_output: 96
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "bn1"
  type: "BatchNorm"
  bottom: "conv2"
  top: "bn1"
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "bn1"
  top: "bn1"
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "bn1"
  top: "conv3"
  convolution_param {
    num_output: 96
    kernel_size: 3
    stride: 2
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "drop1"
  type: "Dropout"
  bottom: "conv3"
  top: "drop1"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "drop1"
  top: "drop1"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "drop1"
  top: "conv4"
  convolution_param {
    num_output: 192
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  convolution_param {
    num_output: 192
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "bn2"
  type: "BatchNorm"
  bottom: "conv5"
  top: "bn2"
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "bn2"
  top: "bn2"
}
layer {
  name: "conv6"
  type: "Convolution"
  bottom: "bn2"
  top: "conv6"
  convolution_param {
    num_output: 192
    kernel_size: 3
    stride: 2
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "drop4"
  type: "Dropout"
  bottom: "conv6"
  top: "drop4"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "drop4"
  top: "drop4"
}
layer {
  name: "conv7"
  type: "Convolution"
  bottom: "drop4"
  top: "conv7"
  convolution_param {
    num_output: 192
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "conv7"
  top: "conv7"
}
layer {
  name: "conv8"
  type: "Convolution"
  bottom: "conv7"
  top: "conv8"
  convolution_param {
    num_output: 192
    kernel_size: 1
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "relu8"
  type: "ReLU"
  bottom: "conv8"
  top: "conv8"
}
layer {
  name: "conv9"
  type: "Convolution"
  bottom: "conv8"
  top: "conv9"
  convolution_param {
    num_output: 10
    kernel_size: 1
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "relu9"
  type: "ReLU"
  bottom: "conv9"
  top: "conv9"
}
layer {
  name: "pool"
  type: "Pooling"
  bottom: "conv9"
  top: "pool"
  pooling_param {
    pool: AVE
    global_pooling: true
  }
}
layer {
  name: "flatten"
  type: "Flatten"
  bottom: "pool"
  top: "flatten"
}
layer {
  name: "score"
  type: "InnerProduct"
  bottom: "flatten"
  top: "score"
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "gaussian"
    }
  }
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "score"
  bottom: "label"
  top: "accuracy"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "score"
  bottom: "label"
  top: "loss"
}
I1017 07:42:06.733371  2835 layer_factory.hpp:77] Creating layer data
I1017 07:42:06.740151  2835 net.cpp:100] Creating Layer data
I1017 07:42:06.740196  2835 net.cpp:408] data -> data
I1017 07:42:06.740247  2835 net.cpp:408] data -> label
I1017 07:42:06.777129  2841 db_lmdb.cpp:35] Opened lmdb ../../../data/mnist/mnist_train_lmdb
I1017 07:42:06.952925  2835 data_layer.cpp:41] output data size: 64,1,28,28
I1017 07:42:06.954957  2835 net.cpp:150] Setting up data
I1017 07:42:06.955013  2835 net.cpp:157] Top shape: 64 1 28 28 (50176)
I1017 07:42:06.955029  2835 net.cpp:157] Top shape: 64 (64)
I1017 07:42:06.955037  2835 net.cpp:165] Memory required for data: 200960
I1017 07:42:06.955059  2835 layer_factory.hpp:77] Creating layer label_data_1_split
I1017 07:42:06.955088  2835 net.cpp:100] Creating Layer label_data_1_split
I1017 07:42:06.955109  2835 net.cpp:434] label_data_1_split <- label
I1017 07:42:06.955143  2835 net.cpp:408] label_data_1_split -> label_data_1_split_0
I1017 07:42:06.955173  2835 net.cpp:408] label_data_1_split -> label_data_1_split_1
I1017 07:42:06.955440  2835 net.cpp:150] Setting up label_data_1_split
I1017 07:42:06.955487  2835 net.cpp:157] Top shape: 64 (64)
I1017 07:42:06.955499  2835 net.cpp:157] Top shape: 64 (64)
I1017 07:42:06.955507  2835 net.cpp:165] Memory required for data: 201472
I1017 07:42:06.955516  2835 layer_factory.hpp:77] Creating layer conv1
I1017 07:42:06.955565  2835 net.cpp:100] Creating Layer conv1
I1017 07:42:06.955580  2835 net.cpp:434] conv1 <- data
I1017 07:42:06.955597  2835 net.cpp:408] conv1 -> conv1
I1017 07:42:08.368985  2835 net.cpp:150] Setting up conv1
I1017 07:42:08.369041  2835 net.cpp:157] Top shape: 64 96 26 26 (4153344)
I1017 07:42:08.369050  2835 net.cpp:165] Memory required for data: 16814848
I1017 07:42:08.369089  2835 layer_factory.hpp:77] Creating layer relu1
I1017 07:42:08.369107  2835 net.cpp:100] Creating Layer relu1
I1017 07:42:08.369115  2835 net.cpp:434] relu1 <- conv1
I1017 07:42:08.369132  2835 net.cpp:395] relu1 -> conv1 (in-place)
I1017 07:42:08.369549  2835 net.cpp:150] Setting up relu1
I1017 07:42:08.369568  2835 net.cpp:157] Top shape: 64 96 26 26 (4153344)
I1017 07:42:08.369575  2835 net.cpp:165] Memory required for data: 33428224
I1017 07:42:08.369582  2835 layer_factory.hpp:77] Creating layer conv2
I1017 07:42:08.369604  2835 net.cpp:100] Creating Layer conv2
I1017 07:42:08.369611  2835 net.cpp:434] conv2 <- conv1
I1017 07:42:08.369623  2835 net.cpp:408] conv2 -> conv2
I1017 07:42:08.399004  2835 net.cpp:150] Setting up conv2
I1017 07:42:08.399070  2835 net.cpp:157] Top shape: 64 96 24 24 (3538944)
I1017 07:42:08.399081  2835 net.cpp:165] Memory required for data: 47584000
I1017 07:42:08.399117  2835 layer_factory.hpp:77] Creating layer bn1
I1017 07:42:08.399140  2835 net.cpp:100] Creating Layer bn1
I1017 07:42:08.399150  2835 net.cpp:434] bn1 <- conv2
I1017 07:42:08.399168  2835 net.cpp:408] bn1 -> bn1
I1017 07:42:08.399840  2835 net.cpp:150] Setting up bn1
I1017 07:42:08.399873  2835 net.cpp:157] Top shape: 64 96 24 24 (3538944)
I1017 07:42:08.399888  2835 net.cpp:165] Memory required for data: 61739776
I1017 07:42:08.399926  2835 layer_factory.hpp:77] Creating layer relu2
I1017 07:42:08.399960  2835 net.cpp:100] Creating Layer relu2
I1017 07:42:08.399979  2835 net.cpp:434] relu2 <- bn1
I1017 07:42:08.400010  2835 net.cpp:395] relu2 -> bn1 (in-place)
I1017 07:42:08.400611  2835 net.cpp:150] Setting up relu2
I1017 07:42:08.400641  2835 net.cpp:157] Top shape: 64 96 24 24 (3538944)
I1017 07:42:08.400650  2835 net.cpp:165] Memory required for data: 75895552
I1017 07:42:08.400658  2835 layer_factory.hpp:77] Creating layer conv3
I1017 07:42:08.400688  2835 net.cpp:100] Creating Layer conv3
I1017 07:42:08.400741  2835 net.cpp:434] conv3 <- bn1
I1017 07:42:08.400760  2835 net.cpp:408] conv3 -> conv3
I1017 07:42:08.405335  2835 net.cpp:150] Setting up conv3
I1017 07:42:08.405380  2835 net.cpp:157] Top shape: 64 96 11 11 (743424)
I1017 07:42:08.405392  2835 net.cpp:165] Memory required for data: 78869248
I1017 07:42:08.405418  2835 layer_factory.hpp:77] Creating layer drop1
I1017 07:42:08.405441  2835 net.cpp:100] Creating Layer drop1
I1017 07:42:08.405450  2835 net.cpp:434] drop1 <- conv3
I1017 07:42:08.405472  2835 net.cpp:408] drop1 -> drop1
I1017 07:42:08.405618  2835 net.cpp:150] Setting up drop1
I1017 07:42:08.405639  2835 net.cpp:157] Top shape: 64 96 11 11 (743424)
I1017 07:42:08.405647  2835 net.cpp:165] Memory required for data: 81842944
I1017 07:42:08.405658  2835 layer_factory.hpp:77] Creating layer relu3
I1017 07:42:08.405673  2835 net.cpp:100] Creating Layer relu3
I1017 07:42:08.405683  2835 net.cpp:434] relu3 <- drop1
I1017 07:42:08.405697  2835 net.cpp:395] relu3 -> drop1 (in-place)
I1017 07:42:08.406476  2835 net.cpp:150] Setting up relu3
I1017 07:42:08.406510  2835 net.cpp:157] Top shape: 64 96 11 11 (743424)
I1017 07:42:08.406519  2835 net.cpp:165] Memory required for data: 84816640
I1017 07:42:08.406527  2835 layer_factory.hpp:77] Creating layer conv4
I1017 07:42:08.406555  2835 net.cpp:100] Creating Layer conv4
I1017 07:42:08.406565  2835 net.cpp:434] conv4 <- drop1
I1017 07:42:08.406580  2835 net.cpp:408] conv4 -> conv4
I1017 07:42:08.413503  2835 net.cpp:150] Setting up conv4
I1017 07:42:08.413547  2835 net.cpp:157] Top shape: 64 192 9 9 (995328)
I1017 07:42:08.413555  2835 net.cpp:165] Memory required for data: 88797952
I1017 07:42:08.413573  2835 layer_factory.hpp:77] Creating layer relu4
I1017 07:42:08.413589  2835 net.cpp:100] Creating Layer relu4
I1017 07:42:08.413600  2835 net.cpp:434] relu4 <- conv4
I1017 07:42:08.413616  2835 net.cpp:395] relu4 -> conv4 (in-place)
I1017 07:42:08.414139  2835 net.cpp:150] Setting up relu4
I1017 07:42:08.414167  2835 net.cpp:157] Top shape: 64 192 9 9 (995328)
I1017 07:42:08.414178  2835 net.cpp:165] Memory required for data: 92779264
I1017 07:42:08.414186  2835 layer_factory.hpp:77] Creating layer conv5
I1017 07:42:08.414206  2835 net.cpp:100] Creating Layer conv5
I1017 07:42:08.414216  2835 net.cpp:434] conv5 <- conv4
I1017 07:42:08.414234  2835 net.cpp:408] conv5 -> conv5
I1017 07:42:08.424093  2835 net.cpp:150] Setting up conv5
I1017 07:42:08.424131  2835 net.cpp:157] Top shape: 64 192 7 7 (602112)
I1017 07:42:08.424140  2835 net.cpp:165] Memory required for data: 95187712
I1017 07:42:08.424160  2835 layer_factory.hpp:77] Creating layer bn2
I1017 07:42:08.424180  2835 net.cpp:100] Creating Layer bn2
I1017 07:42:08.424188  2835 net.cpp:434] bn2 <- conv5
I1017 07:42:08.424206  2835 net.cpp:408] bn2 -> bn2
I1017 07:42:08.424813  2835 net.cpp:150] Setting up bn2
I1017 07:42:08.424834  2835 net.cpp:157] Top shape: 64 192 7 7 (602112)
I1017 07:42:08.424842  2835 net.cpp:165] Memory required for data: 97596160
I1017 07:42:08.424860  2835 layer_factory.hpp:77] Creating layer relu5
I1017 07:42:08.424876  2835 net.cpp:100] Creating Layer relu5
I1017 07:42:08.424885  2835 net.cpp:434] relu5 <- bn2
I1017 07:42:08.424896  2835 net.cpp:395] relu5 -> bn2 (in-place)
I1017 07:42:08.425398  2835 net.cpp:150] Setting up relu5
I1017 07:42:08.425426  2835 net.cpp:157] Top shape: 64 192 7 7 (602112)
I1017 07:42:08.425433  2835 net.cpp:165] Memory required for data: 100004608
I1017 07:42:08.425442  2835 layer_factory.hpp:77] Creating layer conv6
I1017 07:42:08.425467  2835 net.cpp:100] Creating Layer conv6
I1017 07:42:08.425477  2835 net.cpp:434] conv6 <- bn2
I1017 07:42:08.425493  2835 net.cpp:408] conv6 -> conv6
I1017 07:42:08.432824  2835 net.cpp:150] Setting up conv6
I1017 07:42:08.432850  2835 net.cpp:157] Top shape: 64 192 3 3 (110592)
I1017 07:42:08.432858  2835 net.cpp:165] Memory required for data: 100446976
I1017 07:42:08.432875  2835 layer_factory.hpp:77] Creating layer drop4
I1017 07:42:08.432890  2835 net.cpp:100] Creating Layer drop4
I1017 07:42:08.432917  2835 net.cpp:434] drop4 <- conv6
I1017 07:42:08.432930  2835 net.cpp:408] drop4 -> drop4
I1017 07:42:08.432997  2835 net.cpp:150] Setting up drop4
I1017 07:42:08.433007  2835 net.cpp:157] Top shape: 64 192 3 3 (110592)
I1017 07:42:08.433010  2835 net.cpp:165] Memory required for data: 100889344
I1017 07:42:08.433015  2835 layer_factory.hpp:77] Creating layer relu6
I1017 07:42:08.433022  2835 net.cpp:100] Creating Layer relu6
I1017 07:42:08.433027  2835 net.cpp:434] relu6 <- drop4
I1017 07:42:08.433033  2835 net.cpp:395] relu6 -> drop4 (in-place)
I1017 07:42:08.433436  2835 net.cpp:150] Setting up relu6
I1017 07:42:08.433454  2835 net.cpp:157] Top shape: 64 192 3 3 (110592)
I1017 07:42:08.433457  2835 net.cpp:165] Memory required for data: 101331712
I1017 07:42:08.433461  2835 layer_factory.hpp:77] Creating layer conv7
I1017 07:42:08.433476  2835 net.cpp:100] Creating Layer conv7
I1017 07:42:08.433480  2835 net.cpp:434] conv7 <- drop4
I1017 07:42:08.433488  2835 net.cpp:408] conv7 -> conv7
I1017 07:42:08.439030  2835 net.cpp:150] Setting up conv7
I1017 07:42:08.439067  2835 net.cpp:157] Top shape: 64 192 1 1 (12288)
I1017 07:42:08.439074  2835 net.cpp:165] Memory required for data: 101380864
I1017 07:42:08.439085  2835 layer_factory.hpp:77] Creating layer relu7
I1017 07:42:08.439095  2835 net.cpp:100] Creating Layer relu7
I1017 07:42:08.439100  2835 net.cpp:434] relu7 <- conv7
I1017 07:42:08.439110  2835 net.cpp:395] relu7 -> conv7 (in-place)
I1017 07:42:08.439587  2835 net.cpp:150] Setting up relu7
I1017 07:42:08.439606  2835 net.cpp:157] Top shape: 64 192 1 1 (12288)
I1017 07:42:08.439610  2835 net.cpp:165] Memory required for data: 101430016
I1017 07:42:08.439615  2835 layer_factory.hpp:77] Creating layer conv8
I1017 07:42:08.439630  2835 net.cpp:100] Creating Layer conv8
I1017 07:42:08.439633  2835 net.cpp:434] conv8 <- conv7
I1017 07:42:08.439646  2835 net.cpp:408] conv8 -> conv8
I1017 07:42:08.441202  2835 net.cpp:150] Setting up conv8
I1017 07:42:08.441220  2835 net.cpp:157] Top shape: 64 192 1 1 (12288)
I1017 07:42:08.441223  2835 net.cpp:165] Memory required for data: 101479168
I1017 07:42:08.441231  2835 layer_factory.hpp:77] Creating layer relu8
I1017 07:42:08.441241  2835 net.cpp:100] Creating Layer relu8
I1017 07:42:08.441246  2835 net.cpp:434] relu8 <- conv8
I1017 07:42:08.441252  2835 net.cpp:395] relu8 -> conv8 (in-place)
I1017 07:42:08.441453  2835 net.cpp:150] Setting up relu8
I1017 07:42:08.441465  2835 net.cpp:157] Top shape: 64 192 1 1 (12288)
I1017 07:42:08.441468  2835 net.cpp:165] Memory required for data: 101528320
I1017 07:42:08.441473  2835 layer_factory.hpp:77] Creating layer conv9
I1017 07:42:08.441481  2835 net.cpp:100] Creating Layer conv9
I1017 07:42:08.441486  2835 net.cpp:434] conv9 <- conv8
I1017 07:42:08.441491  2835 net.cpp:408] conv9 -> conv9
I1017 07:42:08.442910  2835 net.cpp:150] Setting up conv9
I1017 07:42:08.442925  2835 net.cpp:157] Top shape: 64 10 1 1 (640)
I1017 07:42:08.442929  2835 net.cpp:165] Memory required for data: 101530880
I1017 07:42:08.442935  2835 layer_factory.hpp:77] Creating layer relu9
I1017 07:42:08.442940  2835 net.cpp:100] Creating Layer relu9
I1017 07:42:08.442945  2835 net.cpp:434] relu9 <- conv9
I1017 07:42:08.442950  2835 net.cpp:395] relu9 -> conv9 (in-place)
I1017 07:42:08.443226  2835 net.cpp:150] Setting up relu9
I1017 07:42:08.443236  2835 net.cpp:157] Top shape: 64 10 1 1 (640)
I1017 07:42:08.443239  2835 net.cpp:165] Memory required for data: 101533440
I1017 07:42:08.443243  2835 layer_factory.hpp:77] Creating layer pool
I1017 07:42:08.443249  2835 net.cpp:100] Creating Layer pool
I1017 07:42:08.443253  2835 net.cpp:434] pool <- conv9
I1017 07:42:08.443258  2835 net.cpp:408] pool -> pool
I1017 07:42:08.443451  2835 net.cpp:150] Setting up pool
I1017 07:42:08.443460  2835 net.cpp:157] Top shape: 64 10 1 1 (640)
I1017 07:42:08.443462  2835 net.cpp:165] Memory required for data: 101536000
I1017 07:42:08.443465  2835 layer_factory.hpp:77] Creating layer flatten
I1017 07:42:08.443472  2835 net.cpp:100] Creating Layer flatten
I1017 07:42:08.443490  2835 net.cpp:434] flatten <- pool
I1017 07:42:08.443495  2835 net.cpp:408] flatten -> flatten
I1017 07:42:08.443522  2835 net.cpp:150] Setting up flatten
I1017 07:42:08.443529  2835 net.cpp:157] Top shape: 64 10 (640)
I1017 07:42:08.443531  2835 net.cpp:165] Memory required for data: 101538560
I1017 07:42:08.443534  2835 layer_factory.hpp:77] Creating layer score
I1017 07:42:08.443539  2835 net.cpp:100] Creating Layer score
I1017 07:42:08.443544  2835 net.cpp:434] score <- flatten
I1017 07:42:08.443549  2835 net.cpp:408] score -> score
I1017 07:42:08.443671  2835 net.cpp:150] Setting up score
I1017 07:42:08.443677  2835 net.cpp:157] Top shape: 64 10 (640)
I1017 07:42:08.443681  2835 net.cpp:165] Memory required for data: 101541120
I1017 07:42:08.443686  2835 layer_factory.hpp:77] Creating layer score_score_0_split
I1017 07:42:08.443691  2835 net.cpp:100] Creating Layer score_score_0_split
I1017 07:42:08.443694  2835 net.cpp:434] score_score_0_split <- score
I1017 07:42:08.443701  2835 net.cpp:408] score_score_0_split -> score_score_0_split_0
I1017 07:42:08.443706  2835 net.cpp:408] score_score_0_split -> score_score_0_split_1
I1017 07:42:08.443742  2835 net.cpp:150] Setting up score_score_0_split
I1017 07:42:08.443748  2835 net.cpp:157] Top shape: 64 10 (640)
I1017 07:42:08.443753  2835 net.cpp:157] Top shape: 64 10 (640)
I1017 07:42:08.443754  2835 net.cpp:165] Memory required for data: 101546240
I1017 07:42:08.443756  2835 layer_factory.hpp:77] Creating layer accuracy
I1017 07:42:08.443763  2835 net.cpp:100] Creating Layer accuracy
I1017 07:42:08.443765  2835 net.cpp:434] accuracy <- score_score_0_split_0
I1017 07:42:08.443769  2835 net.cpp:434] accuracy <- label_data_1_split_0
I1017 07:42:08.443774  2835 net.cpp:408] accuracy -> accuracy
I1017 07:42:08.443781  2835 net.cpp:150] Setting up accuracy
I1017 07:42:08.443786  2835 net.cpp:157] Top shape: (1)
I1017 07:42:08.443789  2835 net.cpp:165] Memory required for data: 101546244
I1017 07:42:08.443790  2835 layer_factory.hpp:77] Creating layer loss
I1017 07:42:08.443795  2835 net.cpp:100] Creating Layer loss
I1017 07:42:08.443799  2835 net.cpp:434] loss <- score_score_0_split_1
I1017 07:42:08.443802  2835 net.cpp:434] loss <- label_data_1_split_1
I1017 07:42:08.443809  2835 net.cpp:408] loss -> loss
I1017 07:42:08.443819  2835 layer_factory.hpp:77] Creating layer loss
I1017 07:42:08.444202  2835 net.cpp:150] Setting up loss
I1017 07:42:08.444212  2835 net.cpp:157] Top shape: (1)
I1017 07:42:08.444216  2835 net.cpp:160]     with loss weight 1
I1017 07:42:08.444232  2835 net.cpp:165] Memory required for data: 101546248
I1017 07:42:08.444236  2835 net.cpp:226] loss needs backward computation.
I1017 07:42:08.444243  2835 net.cpp:228] accuracy does not need backward computation.
I1017 07:42:08.444247  2835 net.cpp:226] score_score_0_split needs backward computation.
I1017 07:42:08.444250  2835 net.cpp:226] score needs backward computation.
I1017 07:42:08.444254  2835 net.cpp:226] flatten needs backward computation.
I1017 07:42:08.444257  2835 net.cpp:226] pool needs backward computation.
I1017 07:42:08.444259  2835 net.cpp:226] relu9 needs backward computation.
I1017 07:42:08.444262  2835 net.cpp:226] conv9 needs backward computation.
I1017 07:42:08.444265  2835 net.cpp:226] relu8 needs backward computation.
I1017 07:42:08.444268  2835 net.cpp:226] conv8 needs backward computation.
I1017 07:42:08.444270  2835 net.cpp:226] relu7 needs backward computation.
I1017 07:42:08.444273  2835 net.cpp:226] conv7 needs backward computation.
I1017 07:42:08.444278  2835 net.cpp:226] relu6 needs backward computation.
I1017 07:42:08.444281  2835 net.cpp:226] drop4 needs backward computation.
I1017 07:42:08.444284  2835 net.cpp:226] conv6 needs backward computation.
I1017 07:42:08.444288  2835 net.cpp:226] relu5 needs backward computation.
I1017 07:42:08.444290  2835 net.cpp:226] bn2 needs backward computation.
I1017 07:42:08.444293  2835 net.cpp:226] conv5 needs backward computation.
I1017 07:42:08.444296  2835 net.cpp:226] relu4 needs backward computation.
I1017 07:42:08.444309  2835 net.cpp:226] conv4 needs backward computation.
I1017 07:42:08.444314  2835 net.cpp:226] relu3 needs backward computation.
I1017 07:42:08.444316  2835 net.cpp:226] drop1 needs backward computation.
I1017 07:42:08.444319  2835 net.cpp:226] conv3 needs backward computation.
I1017 07:42:08.444322  2835 net.cpp:226] relu2 needs backward computation.
I1017 07:42:08.444326  2835 net.cpp:226] bn1 needs backward computation.
I1017 07:42:08.444329  2835 net.cpp:226] conv2 needs backward computation.
I1017 07:42:08.444331  2835 net.cpp:226] relu1 needs backward computation.
I1017 07:42:08.444334  2835 net.cpp:226] conv1 needs backward computation.
I1017 07:42:08.444340  2835 net.cpp:228] label_data_1_split does not need backward computation.
I1017 07:42:08.444344  2835 net.cpp:228] data does not need backward computation.
I1017 07:42:08.444346  2835 net.cpp:270] This network produces output accuracy
I1017 07:42:08.444350  2835 net.cpp:270] This network produces output loss
I1017 07:42:08.444370  2835 net.cpp:283] Network initialization done.
I1017 07:42:08.460213  2835 solver.cpp:181] Creating test net (#0) specified by test_net file: /home/adam/Honours/Honours-Project/mnist_allcnn/relu/allcnn_relu_test.prototxt
I1017 07:42:08.460340  2835 net.cpp:58] Initializing net from parameters: 
state {
  phase: TEST
}
layer {
  name: "data"
  type: "Data"
  top: "data"
  top: "label"
  data_param {
    source: "../../../data/mnist/mnist_train_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  convolution_param {
    num_output: 96
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "conv1"
  top: "conv2"
  convolution_param {
    num_output: 96
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "bn1"
  type: "BatchNorm"
  bottom: "conv2"
  top: "bn1"
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "bn1"
  top: "bn1"
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "bn1"
  top: "conv3"
  convolution_param {
    num_output: 96
    kernel_size: 3
    stride: 2
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "drop1"
  type: "Dropout"
  bottom: "conv3"
  top: "drop1"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "drop1"
  top: "drop1"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "drop1"
  top: "conv4"
  convolution_param {
    num_output: 192
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  convolution_param {
    num_output: 192
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "bn2"
  type: "BatchNorm"
  bottom: "conv5"
  top: "bn2"
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "bn2"
  top: "bn2"
}
layer {
  name: "conv6"
  type: "Convolution"
  bottom: "bn2"
  top: "conv6"
  convolution_param {
    num_output: 192
    kernel_size: 3
    stride: 2
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "drop4"
  type: "Dropout"
  bottom: "conv6"
  top: "drop4"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "drop4"
  top: "drop4"
}
layer {
  name: "conv7"
  type: "Convolution"
  bottom: "drop4"
  top: "conv7"
  convolution_param {
    num_output: 192
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "conv7"
  top: "conv7"
}
layer {
  name: "conv8"
  type: "Convolution"
  bottom: "conv7"
  top: "conv8"
  convolution_param {
    num_output: 192
    kernel_size: 1
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "relu8"
  type: "ReLU"
  bottom: "conv8"
  top: "conv8"
}
layer {
  name: "conv9"
  type: "Convolution"
  bottom: "conv8"
  top: "conv9"
  convolution_param {
    num_output: 10
    kernel_size: 1
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "relu9"
  type: "ReLU"
  bottom: "conv9"
  top: "conv9"
}
layer {
  name: "pool"
  type: "Pooling"
  bottom: "conv9"
  top: "pool"
  pooling_param {
    pool: AVE
    global_pooling: true
  }
}
layer {
  name: "flatten"
  type: "Flatten"
  bottom: "pool"
  top: "flatten"
}
layer {
  name: "score"
  type: "InnerProduct"
  bottom: "flatten"
  top: "score"
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "gaussian"
    }
  }
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "score"
  bottom: "label"
  top: "accuracy"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "score"
  bottom: "label"
  top: "loss"
}
I1017 07:42:08.460430  2835 layer_factory.hpp:77] Creating layer data
I1017 07:42:08.460501  2835 net.cpp:100] Creating Layer data
I1017 07:42:08.460506  2835 net.cpp:408] data -> data
I1017 07:42:08.460515  2835 net.cpp:408] data -> label
