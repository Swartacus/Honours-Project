I1014 12:02:18.370224  9026 caffe.cpp:217] Using GPUs 0
I1014 12:02:18.373723  9026 caffe.cpp:222] GPU 0: GeForce GTX 750 Ti
I1014 12:02:18.493172  9026 solver.cpp:48] Initializing solver from parameters: 
train_net: "/home/adam/Honours/Honours-Project/mnist_allcnn/relu/allcnn_relu_train.prototxt"
test_net: "/home/adam/Honours/Honours-Project/mnist_allcnn/relu/allcnn_relu_test.prototxt"
test_iter: 100
test_interval: 25
base_lr: 0.0001
display: 50
max_iter: 25000
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 5000
snapshot: 5000
snapshot_prefix: "cifar-10_relu_AdaDelta"
solver_mode: GPU
device_id: 0
train_state {
  level: 0
  stage: ""
}
type: "AdaDelta"
I1014 12:02:18.493317  9026 solver.cpp:81] Creating training net from train_net file: /home/adam/Honours/Honours-Project/mnist_allcnn/relu/allcnn_relu_train.prototxt
I1014 12:02:18.493633  9026 net.cpp:58] Initializing net from parameters: 
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "data"
  type: "Data"
  top: "data"
  top: "label"
  data_param {
    source: "../../../data/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  convolution_param {
    num_output: 96
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "conv1"
  top: "conv2"
  convolution_param {
    num_output: 96
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "bn1"
  type: "BatchNorm"
  bottom: "conv2"
  top: "bn1"
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "bn1"
  top: "bn1"
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "bn1"
  top: "conv3"
  convolution_param {
    num_output: 96
    kernel_size: 3
    stride: 2
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "drop1"
  type: "Dropout"
  bottom: "conv3"
  top: "drop1"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "drop1"
  top: "drop1"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "drop1"
  top: "conv4"
  convolution_param {
    num_output: 192
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  convolution_param {
    num_output: 192
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "bn2"
  type: "BatchNorm"
  bottom: "conv5"
  top: "bn2"
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "bn2"
  top: "bn2"
}
layer {
  name: "conv6"
  type: "Convolution"
  bottom: "bn2"
  top: "conv6"
  convolution_param {
    num_output: 192
    kernel_size: 3
    stride: 2
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "drop4"
  type: "Dropout"
  bottom: "conv6"
  top: "drop4"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "drop4"
  top: "drop4"
}
layer {
  name: "conv7"
  type: "Convolution"
  bottom: "drop4"
  top: "conv7"
  convolution_param {
    num_output: 192
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "conv7"
  top: "conv7"
}
layer {
  name: "conv8"
  type: "Convolution"
  bottom: "conv7"
  top: "conv8"
  convolution_param {
    num_output: 192
    kernel_size: 1
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "relu8"
  type: "ReLU"
  bottom: "conv8"
  top: "conv8"
}
layer {
  name: "conv9"
  type: "Convolution"
  bottom: "conv8"
  top: "conv9"
  convolution_param {
    num_output: 10
    kernel_size: 1
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "relu9"
  type: "ReLU"
  bottom: "conv9"
  top: "conv9"
}
layer {
  name: "pool"
  type: "Pooling"
  bottom: "conv9"
  top: "pool"
  pooling_param {
    pool: AVE
    global_pooling: true
  }
}
layer {
  name: "flatten"
  type: "Flatten"
  bottom: "pool"
  top: "flatten"
}
layer {
  name: "score"
  type: "InnerProduct"
  bottom: "flatten"
  top: "score"
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "gaussian"
    }
  }
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "score"
  bottom: "label"
  top: "accuracy"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "score"
  bottom: "label"
  top: "loss"
}
I1014 12:02:18.493780  9026 layer_factory.hpp:77] Creating layer data
I1014 12:02:18.494211  9026 net.cpp:100] Creating Layer data
I1014 12:02:18.494220  9026 net.cpp:408] data -> data
I1014 12:02:18.494256  9026 net.cpp:408] data -> label
I1014 12:02:18.494900  9031 db_lmdb.cpp:35] Opened lmdb ../../../data/mnist/mnist_train_lmdb
I1014 12:02:18.501734  9026 data_layer.cpp:41] output data size: 64,1,28,28
I1014 12:02:18.502480  9026 net.cpp:150] Setting up data
I1014 12:02:18.502493  9026 net.cpp:157] Top shape: 64 1 28 28 (50176)
I1014 12:02:18.502519  9026 net.cpp:157] Top shape: 64 (64)
I1014 12:02:18.502521  9026 net.cpp:165] Memory required for data: 200960
I1014 12:02:18.502531  9026 layer_factory.hpp:77] Creating layer label_data_1_split
I1014 12:02:18.502568  9026 net.cpp:100] Creating Layer label_data_1_split
I1014 12:02:18.502574  9026 net.cpp:434] label_data_1_split <- label
I1014 12:02:18.502583  9026 net.cpp:408] label_data_1_split -> label_data_1_split_0
I1014 12:02:18.502606  9026 net.cpp:408] label_data_1_split -> label_data_1_split_1
I1014 12:02:18.502638  9026 net.cpp:150] Setting up label_data_1_split
I1014 12:02:18.502643  9026 net.cpp:157] Top shape: 64 (64)
I1014 12:02:18.502645  9026 net.cpp:157] Top shape: 64 (64)
I1014 12:02:18.502647  9026 net.cpp:165] Memory required for data: 201472
I1014 12:02:18.502650  9026 layer_factory.hpp:77] Creating layer conv1
I1014 12:02:18.502661  9026 net.cpp:100] Creating Layer conv1
I1014 12:02:18.502665  9026 net.cpp:434] conv1 <- data
I1014 12:02:18.502671  9026 net.cpp:408] conv1 -> conv1
I1014 12:02:18.640930  9026 net.cpp:150] Setting up conv1
I1014 12:02:18.640952  9026 net.cpp:157] Top shape: 64 96 26 26 (4153344)
I1014 12:02:18.640954  9026 net.cpp:165] Memory required for data: 16814848
I1014 12:02:18.640971  9026 layer_factory.hpp:77] Creating layer relu1
I1014 12:02:18.640980  9026 net.cpp:100] Creating Layer relu1
I1014 12:02:18.640981  9026 net.cpp:434] relu1 <- conv1
I1014 12:02:18.640985  9026 net.cpp:395] relu1 -> conv1 (in-place)
I1014 12:02:18.641155  9026 net.cpp:150] Setting up relu1
I1014 12:02:18.641161  9026 net.cpp:157] Top shape: 64 96 26 26 (4153344)
I1014 12:02:18.641165  9026 net.cpp:165] Memory required for data: 33428224
I1014 12:02:18.641166  9026 layer_factory.hpp:77] Creating layer conv2
I1014 12:02:18.641175  9026 net.cpp:100] Creating Layer conv2
I1014 12:02:18.641176  9026 net.cpp:434] conv2 <- conv1
I1014 12:02:18.641180  9026 net.cpp:408] conv2 -> conv2
I1014 12:02:18.642570  9026 net.cpp:150] Setting up conv2
I1014 12:02:18.642581  9026 net.cpp:157] Top shape: 64 96 24 24 (3538944)
I1014 12:02:18.642585  9026 net.cpp:165] Memory required for data: 47584000
I1014 12:02:18.642590  9026 layer_factory.hpp:77] Creating layer bn1
I1014 12:02:18.642594  9026 net.cpp:100] Creating Layer bn1
I1014 12:02:18.642597  9026 net.cpp:434] bn1 <- conv2
I1014 12:02:18.642601  9026 net.cpp:408] bn1 -> bn1
I1014 12:02:18.642793  9026 net.cpp:150] Setting up bn1
I1014 12:02:18.642798  9026 net.cpp:157] Top shape: 64 96 24 24 (3538944)
I1014 12:02:18.642802  9026 net.cpp:165] Memory required for data: 61739776
I1014 12:02:18.642807  9026 layer_factory.hpp:77] Creating layer relu2
I1014 12:02:18.642810  9026 net.cpp:100] Creating Layer relu2
I1014 12:02:18.642813  9026 net.cpp:434] relu2 <- bn1
I1014 12:02:18.642817  9026 net.cpp:395] relu2 -> bn1 (in-place)
I1014 12:02:18.642992  9026 net.cpp:150] Setting up relu2
I1014 12:02:18.642999  9026 net.cpp:157] Top shape: 64 96 24 24 (3538944)
I1014 12:02:18.643002  9026 net.cpp:165] Memory required for data: 75895552
I1014 12:02:18.643003  9026 layer_factory.hpp:77] Creating layer conv3
I1014 12:02:18.643008  9026 net.cpp:100] Creating Layer conv3
I1014 12:02:18.643023  9026 net.cpp:434] conv3 <- bn1
I1014 12:02:18.643028  9026 net.cpp:408] conv3 -> conv3
I1014 12:02:18.644255  9026 net.cpp:150] Setting up conv3
I1014 12:02:18.644265  9026 net.cpp:157] Top shape: 64 96 11 11 (743424)
I1014 12:02:18.644268  9026 net.cpp:165] Memory required for data: 78869248
I1014 12:02:18.644273  9026 layer_factory.hpp:77] Creating layer drop1
I1014 12:02:18.644280  9026 net.cpp:100] Creating Layer drop1
I1014 12:02:18.644282  9026 net.cpp:434] drop1 <- conv3
I1014 12:02:18.644309  9026 net.cpp:408] drop1 -> drop1
I1014 12:02:18.644369  9026 net.cpp:150] Setting up drop1
I1014 12:02:18.644388  9026 net.cpp:157] Top shape: 64 96 11 11 (743424)
I1014 12:02:18.644390  9026 net.cpp:165] Memory required for data: 81842944
I1014 12:02:18.644392  9026 layer_factory.hpp:77] Creating layer relu3
I1014 12:02:18.644395  9026 net.cpp:100] Creating Layer relu3
I1014 12:02:18.644397  9026 net.cpp:434] relu3 <- drop1
I1014 12:02:18.644400  9026 net.cpp:395] relu3 -> drop1 (in-place)
I1014 12:02:18.644685  9026 net.cpp:150] Setting up relu3
I1014 12:02:18.644692  9026 net.cpp:157] Top shape: 64 96 11 11 (743424)
I1014 12:02:18.644695  9026 net.cpp:165] Memory required for data: 84816640
I1014 12:02:18.644697  9026 layer_factory.hpp:77] Creating layer conv4
I1014 12:02:18.644702  9026 net.cpp:100] Creating Layer conv4
I1014 12:02:18.644704  9026 net.cpp:434] conv4 <- drop1
I1014 12:02:18.644708  9026 net.cpp:408] conv4 -> conv4
I1014 12:02:18.646543  9026 net.cpp:150] Setting up conv4
I1014 12:02:18.646553  9026 net.cpp:157] Top shape: 64 192 9 9 (995328)
I1014 12:02:18.646555  9026 net.cpp:165] Memory required for data: 88797952
I1014 12:02:18.646559  9026 layer_factory.hpp:77] Creating layer relu4
I1014 12:02:18.646564  9026 net.cpp:100] Creating Layer relu4
I1014 12:02:18.646565  9026 net.cpp:434] relu4 <- conv4
I1014 12:02:18.646569  9026 net.cpp:395] relu4 -> conv4 (in-place)
I1014 12:02:18.646745  9026 net.cpp:150] Setting up relu4
I1014 12:02:18.646751  9026 net.cpp:157] Top shape: 64 192 9 9 (995328)
I1014 12:02:18.646754  9026 net.cpp:165] Memory required for data: 92779264
I1014 12:02:18.646756  9026 layer_factory.hpp:77] Creating layer conv5
I1014 12:02:18.646761  9026 net.cpp:100] Creating Layer conv5
I1014 12:02:18.646764  9026 net.cpp:434] conv5 <- conv4
I1014 12:02:18.646769  9026 net.cpp:408] conv5 -> conv5
I1014 12:02:18.649435  9026 net.cpp:150] Setting up conv5
I1014 12:02:18.649448  9026 net.cpp:157] Top shape: 64 192 7 7 (602112)
I1014 12:02:18.649451  9026 net.cpp:165] Memory required for data: 95187712
I1014 12:02:18.649456  9026 layer_factory.hpp:77] Creating layer bn2
I1014 12:02:18.649461  9026 net.cpp:100] Creating Layer bn2
I1014 12:02:18.649463  9026 net.cpp:434] bn2 <- conv5
I1014 12:02:18.649467  9026 net.cpp:408] bn2 -> bn2
I1014 12:02:18.649658  9026 net.cpp:150] Setting up bn2
I1014 12:02:18.649662  9026 net.cpp:157] Top shape: 64 192 7 7 (602112)
I1014 12:02:18.649664  9026 net.cpp:165] Memory required for data: 97596160
I1014 12:02:18.649669  9026 layer_factory.hpp:77] Creating layer relu5
I1014 12:02:18.649673  9026 net.cpp:100] Creating Layer relu5
I1014 12:02:18.649675  9026 net.cpp:434] relu5 <- bn2
I1014 12:02:18.649679  9026 net.cpp:395] relu5 -> bn2 (in-place)
I1014 12:02:18.649854  9026 net.cpp:150] Setting up relu5
I1014 12:02:18.649862  9026 net.cpp:157] Top shape: 64 192 7 7 (602112)
I1014 12:02:18.649863  9026 net.cpp:165] Memory required for data: 100004608
I1014 12:02:18.649865  9026 layer_factory.hpp:77] Creating layer conv6
I1014 12:02:18.649870  9026 net.cpp:100] Creating Layer conv6
I1014 12:02:18.649873  9026 net.cpp:434] conv6 <- bn2
I1014 12:02:18.649876  9026 net.cpp:408] conv6 -> conv6
I1014 12:02:18.652457  9026 net.cpp:150] Setting up conv6
I1014 12:02:18.652482  9026 net.cpp:157] Top shape: 64 192 3 3 (110592)
I1014 12:02:18.652485  9026 net.cpp:165] Memory required for data: 100446976
I1014 12:02:18.652494  9026 layer_factory.hpp:77] Creating layer drop4
I1014 12:02:18.652503  9026 net.cpp:100] Creating Layer drop4
I1014 12:02:18.652544  9026 net.cpp:434] drop4 <- conv6
I1014 12:02:18.652547  9026 net.cpp:408] drop4 -> drop4
I1014 12:02:18.652611  9026 net.cpp:150] Setting up drop4
I1014 12:02:18.652629  9026 net.cpp:157] Top shape: 64 192 3 3 (110592)
I1014 12:02:18.652631  9026 net.cpp:165] Memory required for data: 100889344
I1014 12:02:18.652633  9026 layer_factory.hpp:77] Creating layer relu6
I1014 12:02:18.652649  9026 net.cpp:100] Creating Layer relu6
I1014 12:02:18.652652  9026 net.cpp:434] relu6 <- drop4
I1014 12:02:18.652654  9026 net.cpp:395] relu6 -> drop4 (in-place)
I1014 12:02:18.652942  9026 net.cpp:150] Setting up relu6
I1014 12:02:18.652951  9026 net.cpp:157] Top shape: 64 192 3 3 (110592)
I1014 12:02:18.652966  9026 net.cpp:165] Memory required for data: 101331712
I1014 12:02:18.652969  9026 layer_factory.hpp:77] Creating layer conv7
I1014 12:02:18.652976  9026 net.cpp:100] Creating Layer conv7
I1014 12:02:18.652978  9026 net.cpp:434] conv7 <- drop4
I1014 12:02:18.652982  9026 net.cpp:408] conv7 -> conv7
I1014 12:02:18.656018  9026 net.cpp:150] Setting up conv7
I1014 12:02:18.656036  9026 net.cpp:157] Top shape: 64 192 1 1 (12288)
I1014 12:02:18.656039  9026 net.cpp:165] Memory required for data: 101380864
I1014 12:02:18.656045  9026 layer_factory.hpp:77] Creating layer relu7
I1014 12:02:18.656050  9026 net.cpp:100] Creating Layer relu7
I1014 12:02:18.656054  9026 net.cpp:434] relu7 <- conv7
I1014 12:02:18.656057  9026 net.cpp:395] relu7 -> conv7 (in-place)
I1014 12:02:18.656313  9026 net.cpp:150] Setting up relu7
I1014 12:02:18.656322  9026 net.cpp:157] Top shape: 64 192 1 1 (12288)
I1014 12:02:18.656323  9026 net.cpp:165] Memory required for data: 101430016
I1014 12:02:18.656325  9026 layer_factory.hpp:77] Creating layer conv8
I1014 12:02:18.656333  9026 net.cpp:100] Creating Layer conv8
I1014 12:02:18.656337  9026 net.cpp:434] conv8 <- conv7
I1014 12:02:18.656339  9026 net.cpp:408] conv8 -> conv8
I1014 12:02:18.657310  9026 net.cpp:150] Setting up conv8
I1014 12:02:18.657320  9026 net.cpp:157] Top shape: 64 192 1 1 (12288)
I1014 12:02:18.657321  9026 net.cpp:165] Memory required for data: 101479168
I1014 12:02:18.657326  9026 layer_factory.hpp:77] Creating layer relu8
I1014 12:02:18.657330  9026 net.cpp:100] Creating Layer relu8
I1014 12:02:18.657333  9026 net.cpp:434] relu8 <- conv8
I1014 12:02:18.657336  9026 net.cpp:395] relu8 -> conv8 (in-place)
I1014 12:02:18.657507  9026 net.cpp:150] Setting up relu8
I1014 12:02:18.657513  9026 net.cpp:157] Top shape: 64 192 1 1 (12288)
I1014 12:02:18.657516  9026 net.cpp:165] Memory required for data: 101528320
I1014 12:02:18.657517  9026 layer_factory.hpp:77] Creating layer conv9
I1014 12:02:18.657524  9026 net.cpp:100] Creating Layer conv9
I1014 12:02:18.657526  9026 net.cpp:434] conv9 <- conv8
I1014 12:02:18.657529  9026 net.cpp:408] conv9 -> conv9
I1014 12:02:18.658612  9026 net.cpp:150] Setting up conv9
I1014 12:02:18.658622  9026 net.cpp:157] Top shape: 64 10 1 1 (640)
I1014 12:02:18.658625  9026 net.cpp:165] Memory required for data: 101530880
I1014 12:02:18.658629  9026 layer_factory.hpp:77] Creating layer relu9
I1014 12:02:18.658633  9026 net.cpp:100] Creating Layer relu9
I1014 12:02:18.658635  9026 net.cpp:434] relu9 <- conv9
I1014 12:02:18.658638  9026 net.cpp:395] relu9 -> conv9 (in-place)
I1014 12:02:18.658893  9026 net.cpp:150] Setting up relu9
I1014 12:02:18.658902  9026 net.cpp:157] Top shape: 64 10 1 1 (640)
I1014 12:02:18.658905  9026 net.cpp:165] Memory required for data: 101533440
I1014 12:02:18.658906  9026 layer_factory.hpp:77] Creating layer pool
I1014 12:02:18.658911  9026 net.cpp:100] Creating Layer pool
I1014 12:02:18.658913  9026 net.cpp:434] pool <- conv9
I1014 12:02:18.658916  9026 net.cpp:408] pool -> pool
I1014 12:02:18.659111  9026 net.cpp:150] Setting up pool
I1014 12:02:18.659116  9026 net.cpp:157] Top shape: 64 10 1 1 (640)
I1014 12:02:18.659118  9026 net.cpp:165] Memory required for data: 101536000
I1014 12:02:18.659121  9026 layer_factory.hpp:77] Creating layer flatten
I1014 12:02:18.659123  9026 net.cpp:100] Creating Layer flatten
I1014 12:02:18.659135  9026 net.cpp:434] flatten <- pool
I1014 12:02:18.659139  9026 net.cpp:408] flatten -> flatten
I1014 12:02:18.659175  9026 net.cpp:150] Setting up flatten
I1014 12:02:18.659179  9026 net.cpp:157] Top shape: 64 10 (640)
I1014 12:02:18.659181  9026 net.cpp:165] Memory required for data: 101538560
I1014 12:02:18.659183  9026 layer_factory.hpp:77] Creating layer score
I1014 12:02:18.659201  9026 net.cpp:100] Creating Layer score
I1014 12:02:18.659204  9026 net.cpp:434] score <- flatten
I1014 12:02:18.659220  9026 net.cpp:408] score -> score
I1014 12:02:18.659399  9026 net.cpp:150] Setting up score
I1014 12:02:18.659404  9026 net.cpp:157] Top shape: 64 10 (640)
I1014 12:02:18.659405  9026 net.cpp:165] Memory required for data: 101541120
I1014 12:02:18.659409  9026 layer_factory.hpp:77] Creating layer score_score_0_split
I1014 12:02:18.659413  9026 net.cpp:100] Creating Layer score_score_0_split
I1014 12:02:18.659415  9026 net.cpp:434] score_score_0_split <- score
I1014 12:02:18.659420  9026 net.cpp:408] score_score_0_split -> score_score_0_split_0
I1014 12:02:18.659423  9026 net.cpp:408] score_score_0_split -> score_score_0_split_1
I1014 12:02:18.659464  9026 net.cpp:150] Setting up score_score_0_split
I1014 12:02:18.659469  9026 net.cpp:157] Top shape: 64 10 (640)
I1014 12:02:18.659471  9026 net.cpp:157] Top shape: 64 10 (640)
I1014 12:02:18.659473  9026 net.cpp:165] Memory required for data: 101546240
I1014 12:02:18.659489  9026 layer_factory.hpp:77] Creating layer accuracy
I1014 12:02:18.659493  9026 net.cpp:100] Creating Layer accuracy
I1014 12:02:18.659497  9026 net.cpp:434] accuracy <- score_score_0_split_0
I1014 12:02:18.659512  9026 net.cpp:434] accuracy <- label_data_1_split_0
I1014 12:02:18.659515  9026 net.cpp:408] accuracy -> accuracy
I1014 12:02:18.659535  9026 net.cpp:150] Setting up accuracy
I1014 12:02:18.659538  9026 net.cpp:157] Top shape: (1)
I1014 12:02:18.659539  9026 net.cpp:165] Memory required for data: 101546244
I1014 12:02:18.659541  9026 layer_factory.hpp:77] Creating layer loss
I1014 12:02:18.659559  9026 net.cpp:100] Creating Layer loss
I1014 12:02:18.659561  9026 net.cpp:434] loss <- score_score_0_split_1
I1014 12:02:18.659564  9026 net.cpp:434] loss <- label_data_1_split_1
I1014 12:02:18.659579  9026 net.cpp:408] loss -> loss
I1014 12:02:18.659586  9026 layer_factory.hpp:77] Creating layer loss
I1014 12:02:18.659925  9026 net.cpp:150] Setting up loss
I1014 12:02:18.659934  9026 net.cpp:157] Top shape: (1)
I1014 12:02:18.659935  9026 net.cpp:160]     with loss weight 1
I1014 12:02:18.659951  9026 net.cpp:165] Memory required for data: 101546248
I1014 12:02:18.659955  9026 net.cpp:226] loss needs backward computation.
I1014 12:02:18.659960  9026 net.cpp:228] accuracy does not need backward computation.
I1014 12:02:18.659963  9026 net.cpp:226] score_score_0_split needs backward computation.
I1014 12:02:18.659966  9026 net.cpp:226] score needs backward computation.
I1014 12:02:18.659982  9026 net.cpp:226] flatten needs backward computation.
I1014 12:02:18.659984  9026 net.cpp:226] pool needs backward computation.
I1014 12:02:18.659986  9026 net.cpp:226] relu9 needs backward computation.
I1014 12:02:18.659988  9026 net.cpp:226] conv9 needs backward computation.
I1014 12:02:18.659991  9026 net.cpp:226] relu8 needs backward computation.
I1014 12:02:18.659992  9026 net.cpp:226] conv8 needs backward computation.
I1014 12:02:18.659994  9026 net.cpp:226] relu7 needs backward computation.
I1014 12:02:18.659996  9026 net.cpp:226] conv7 needs backward computation.
I1014 12:02:18.659998  9026 net.cpp:226] relu6 needs backward computation.
I1014 12:02:18.660015  9026 net.cpp:226] drop4 needs backward computation.
I1014 12:02:18.660017  9026 net.cpp:226] conv6 needs backward computation.
I1014 12:02:18.660019  9026 net.cpp:226] relu5 needs backward computation.
I1014 12:02:18.660022  9026 net.cpp:226] bn2 needs backward computation.
I1014 12:02:18.660037  9026 net.cpp:226] conv5 needs backward computation.
I1014 12:02:18.660038  9026 net.cpp:226] relu4 needs backward computation.
I1014 12:02:18.660049  9026 net.cpp:226] conv4 needs backward computation.
I1014 12:02:18.660051  9026 net.cpp:226] relu3 needs backward computation.
I1014 12:02:18.660053  9026 net.cpp:226] drop1 needs backward computation.
I1014 12:02:18.660056  9026 net.cpp:226] conv3 needs backward computation.
I1014 12:02:18.660058  9026 net.cpp:226] relu2 needs backward computation.
I1014 12:02:18.660073  9026 net.cpp:226] bn1 needs backward computation.
I1014 12:02:18.660075  9026 net.cpp:226] conv2 needs backward computation.
I1014 12:02:18.660078  9026 net.cpp:226] relu1 needs backward computation.
I1014 12:02:18.660079  9026 net.cpp:226] conv1 needs backward computation.
I1014 12:02:18.660097  9026 net.cpp:228] label_data_1_split does not need backward computation.
I1014 12:02:18.660100  9026 net.cpp:228] data does not need backward computation.
I1014 12:02:18.660102  9026 net.cpp:270] This network produces output accuracy
I1014 12:02:18.660105  9026 net.cpp:270] This network produces output loss
I1014 12:02:18.660137  9026 net.cpp:283] Network initialization done.
I1014 12:02:18.660364  9026 solver.cpp:181] Creating test net (#0) specified by test_net file: /home/adam/Honours/Honours-Project/mnist_allcnn/relu/allcnn_relu_test.prototxt
I1014 12:02:18.660506  9026 net.cpp:58] Initializing net from parameters: 
state {
  phase: TEST
}
layer {
  name: "data"
  type: "Data"
  top: "data"
  top: "label"
  data_param {
    source: "../../../data/mnist/mnist_train_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  convolution_param {
    num_output: 96
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "conv1"
  top: "conv2"
  convolution_param {
    num_output: 96
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "bn1"
  type: "BatchNorm"
  bottom: "conv2"
  top: "bn1"
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "bn1"
  top: "bn1"
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "bn1"
  top: "conv3"
  convolution_param {
    num_output: 96
    kernel_size: 3
    stride: 2
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "drop1"
  type: "Dropout"
  bottom: "conv3"
  top: "drop1"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "drop1"
  top: "drop1"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "drop1"
  top: "conv4"
  convolution_param {
    num_output: 192
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  convolution_param {
    num_output: 192
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "bn2"
  type: "BatchNorm"
  bottom: "conv5"
  top: "bn2"
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "bn2"
  top: "bn2"
}
layer {
  name: "conv6"
  type: "Convolution"
  bottom: "bn2"
  top: "conv6"
  convolution_param {
    num_output: 192
    kernel_size: 3
    stride: 2
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "drop4"
  type: "Dropout"
  bottom: "conv6"
  top: "drop4"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "drop4"
  top: "drop4"
}
layer {
  name: "conv7"
  type: "Convolution"
  bottom: "drop4"
  top: "conv7"
  convolution_param {
    num_output: 192
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "conv7"
  top: "conv7"
}
layer {
  name: "conv8"
  type: "Convolution"
  bottom: "conv7"
  top: "conv8"
  convolution_param {
    num_output: 192
    kernel_size: 1
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "relu8"
  type: "ReLU"
  bottom: "conv8"
  top: "conv8"
}
layer {
  name: "conv9"
  type: "Convolution"
  bottom: "conv8"
  top: "conv9"
  convolution_param {
    num_output: 10
    kernel_size: 1
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "relu9"
  type: "ReLU"
  bottom: "conv9"
  top: "conv9"
}
layer {
  name: "pool"
  type: "Pooling"
  bottom: "conv9"
  top: "pool"
  pooling_param {
    pool: AVE
    global_pooling: true
  }
}
layer {
  name: "flatten"
  type: "Flatten"
  bottom: "pool"
  top: "flatten"
}
layer {
  name: "score"
  type: "InnerProduct"
  bottom: "flatten"
  top: "score"
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "gaussian"
    }
  }
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "score"
  bottom: "label"
  top: "accuracy"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "score"
  bottom: "label"
  top: "loss"
}
I1014 12:02:18.660620  9026 layer_factory.hpp:77] Creating layer data
I1014 12:02:18.660718  9026 net.cpp:100] Creating Layer data
I1014 12:02:18.660722  9026 net.cpp:408] data -> data
I1014 12:02:18.660729  9026 net.cpp:408] data -> label
